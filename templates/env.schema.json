{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Environment Variable Schema",
  "description": "Schema for validating environment variables and configuration",
  "type": "object",
  "definitions": {
    "non_empty_string": {
      "type": "string",
      "minLength": 1
    },
    "url": {
      "type": "string",
      "pattern": "^https?://.*"
    },
    "port": {
      "type": "integer",
      "minimum": 1,
      "maximum": 65535
    },
    "log_level": {
      "type": "string",
      "enum": ["DEBUG", "INFO", "WARN", "ERROR", "FATAL"]
    },
    "environment": {
      "type": "string",
      "enum": ["development", "dev", "staging", "stage", "production", "prod", "test"]
    },
    "boolean_string": {
      "type": "string",
      "enum": ["true", "false", "1", "0", "yes", "no"]
    },
    "database_url": {
      "type": "string",
      "pattern": "^(postgresql|mysql|mongodb|redis)://.*"
    }
  },
  "properties": {
    "NODE_ENV": {
      "$ref": "#/definitions/environment",
      "description": "Application environment",
      "default": "development"
    },
    "ENVIRONMENT": {
      "$ref": "#/definitions/environment", 
      "description": "Deployment environment identifier"
    },
    "PORT": {
      "$ref": "#/definitions/port",
      "description": "Port number for the HTTP server",
      "default": 3000
    },
    "HOST": {
      "type": "string",
      "description": "Host address to bind to",
      "default": "0.0.0.0"
    },
    "LOG_LEVEL": {
      "$ref": "#/definitions/log_level",
      "description": "Logging level",
      "default": "INFO"
    },
    "LOG_FORMAT": {
      "type": "string",
      "enum": ["json", "text", "structured"],
      "description": "Log output format",
      "default": "json"
    },
    "DATABASE_URL": {
      "$ref": "#/definitions/database_url",
      "description": "Primary database connection string",
      "examples": [
        "postgresql://user:pass@localhost:5432/dbname",
        "mysql://user:pass@localhost:3306/dbname"
      ]
    },
    "DATABASE_HOST": {
      "$ref": "#/definitions/non_empty_string",
      "description": "Database host address"
    },
    "DATABASE_PORT": {
      "$ref": "#/definitions/port",
      "description": "Database port number"
    },
    "DATABASE_NAME": {
      "$ref": "#/definitions/non_empty_string",
      "description": "Database name"
    },
    "DATABASE_USER": {
      "$ref": "#/definitions/non_empty_string",
      "description": "Database username"
    },
    "DATABASE_PASSWORD": {
      "type": "string",
      "description": "Database password (should be from secrets manager)",
      "minLength": 8
    },
    "DATABASE_SSL": {
      "$ref": "#/definitions/boolean_string",
      "description": "Enable SSL for database connections",
      "default": "true"
    },
    "DATABASE_POOL_MIN": {
      "type": "integer",
      "minimum": 1,
      "maximum": 50,
      "description": "Minimum database connection pool size",
      "default": 2
    },
    "DATABASE_POOL_MAX": {
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "description": "Maximum database connection pool size", 
      "default": 10
    },
    "REDIS_URL": {
      "type": "string",
      "pattern": "^redis://.*",
      "description": "Redis connection string"
    },
    "REDIS_HOST": {
      "$ref": "#/definitions/non_empty_string",
      "description": "Redis host address"
    },
    "REDIS_PORT": {
      "$ref": "#/definitions/port",
      "description": "Redis port number",
      "default": 6379
    },
    "REDIS_PASSWORD": {
      "type": "string",
      "description": "Redis password"
    },
    "CACHE_TTL": {
      "type": "integer",
      "minimum": 60,
      "maximum": 86400,
      "description": "Default cache TTL in seconds",
      "default": 3600
    },
    "API_BASE_URL": {
      "$ref": "#/definitions/url",
      "description": "Base URL for API endpoints"
    },
    "API_TIMEOUT": {
      "type": "integer",
      "minimum": 1000,
      "maximum": 30000,
      "description": "API request timeout in milliseconds",
      "default": 5000
    },
    "API_RATE_LIMIT": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10000,
      "description": "API rate limit requests per minute",
      "default": 100
    },
    "JWT_SECRET": {
      "type": "string",
      "minLength": 32,
      "description": "JWT signing secret (minimum 32 characters)"
    },
    "JWT_EXPIRES_IN": {
      "type": "string",
      "pattern": "^\\d+[smhd]$",
      "description": "JWT expiration time (e.g., 15m, 1h, 7d)",
      "default": "1h"
    },
    "ENCRYPTION_KEY": {
      "type": "string",
      "minLength": 32,
      "description": "Encryption key for sensitive data"
    },
    "SESSION_SECRET": {
      "type": "string",
      "minLength": 32,
      "description": "Session signing secret"
    },
    "CORS_ORIGIN": {
      "oneOf": [
        {"type": "string"},
        {
          "type": "array",
          "items": {"type": "string"}
        }
      ],
      "description": "CORS allowed origins"
    },
    "TRUSTED_PROXIES": {
      "type": "string",
      "description": "Comma-separated list of trusted proxy IPs"
    },
    "RATE_LIMIT_WINDOW": {
      "type": "integer",
      "minimum": 60,
      "maximum": 3600,
      "description": "Rate limit window in seconds",
      "default": 900
    },
    "RATE_LIMIT_MAX": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10000,
      "description": "Maximum requests per rate limit window",
      "default": 100
    },
    "METRICS_ENABLED": {
      "$ref": "#/definitions/boolean_string",
      "description": "Enable metrics collection",
      "default": "true"
    },
    "METRICS_PORT": {
      "$ref": "#/definitions/port",
      "description": "Port for metrics endpoint",
      "default": 9090
    },
    "HEALTH_CHECK_PATH": {
      "type": "string",
      "pattern": "^/.*",
      "description": "Health check endpoint path",
      "default": "/healthz"
    },
    "READY_CHECK_PATH": {
      "type": "string", 
      "pattern": "^/.*",
      "description": "Readiness check endpoint path",
      "default": "/readyz"
    },
    "GRACEFUL_SHUTDOWN_TIMEOUT": {
      "type": "integer",
      "minimum": 5,
      "maximum": 300,
      "description": "Graceful shutdown timeout in seconds",
      "default": 30
    },
    "WORKER_CONCURRENCY": {
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "description": "Number of worker processes/threads",
      "default": 4
    },
    "QUEUE_URL": {
      "type": "string",
      "description": "Message queue connection string"
    },
    "QUEUE_RETRY_ATTEMPTS": {
      "type": "integer",
      "minimum": 0,
      "maximum": 10,
      "description": "Number of retry attempts for failed jobs",
      "default": 3
    },
    "QUEUE_RETRY_DELAY": {
      "type": "integer",
      "minimum": 1000,
      "maximum": 300000,
      "description": "Delay between retry attempts in milliseconds",
      "default": 5000
    },
    "EXTERNAL_API_KEY": {
      "type": "string",
      "description": "API key for external service integration"
    },
    "EXTERNAL_API_URL": {
      "$ref": "#/definitions/url",
      "description": "External API base URL"
    },
    "EXTERNAL_API_TIMEOUT": {
      "type": "integer",
      "minimum": 1000,
      "maximum": 60000,
      "description": "External API timeout in milliseconds",
      "default": 10000
    },
    "WEBHOOK_SECRET": {
      "type": "string",
      "minLength": 16,
      "description": "Webhook verification secret"
    },
    "FEATURE_FLAG_*": {
      "type": "string",
      "pattern": "^(true|false|enabled|disabled|on|off)$",
      "description": "Feature flag values"
    },
    "MAX_REQUEST_SIZE": {
      "type": "string",
      "pattern": "^\\d+[kmgKMG]?[bB]?$",
      "description": "Maximum request body size (e.g., 10mb, 1gb)",
      "default": "10mb"
    },
    "FILE_UPLOAD_PATH": {
      "type": "string",
      "description": "Directory path for file uploads"
    },
    "FILE_UPLOAD_MAX_SIZE": {
      "type": "string",
      "pattern": "^\\d+[kmgKMG]?[bB]?$",
      "description": "Maximum file upload size",
      "default": "5mb"
    },
    "SMTP_HOST": {
      "$ref": "#/definitions/non_empty_string",
      "description": "SMTP server hostname"
    },
    "SMTP_PORT": {
      "$ref": "#/definitions/port",
      "description": "SMTP server port",
      "default": 587
    },
    "SMTP_USER": {
      "$ref": "#/definitions/non_empty_string",
      "description": "SMTP username"
    },
    "SMTP_PASSWORD": {
      "type": "string",
      "description": "SMTP password"
    },
    "EMAIL_FROM": {
      "type": "string",
      "format": "email",
      "description": "Default sender email address"
    },
    "MONITORING_ENABLED": {
      "$ref": "#/definitions/boolean_string",
      "description": "Enable application monitoring",
      "default": "true"
    },
    "TRACE_SAMPLE_RATE": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Distributed tracing sample rate",
      "default": 0.1
    },
    "DEBUG": {
      "$ref": "#/definitions/boolean_string",
      "description": "Enable debug mode",
      "default": "false"
    }
  },
  "required": [
    "NODE_ENV",
    "PORT",
    "LOG_LEVEL"
  ],
  "conditionalRequirements": {
    "if": {
      "properties": {
        "NODE_ENV": {"const": "production"}
      }
    },
    "then": {
      "required": [
        "DATABASE_URL",
        "JWT_SECRET"
      ]
    }
  },
  "additionalProperties": true,
  "examples": [
    {
      "NODE_ENV": "development",
      "PORT": 3000,
      "LOG_LEVEL": "DEBUG",
      "DATABASE_URL": "postgresql://user:pass@localhost:5432/myapp",
      "REDIS_URL": "redis://localhost:6379",
      "JWT_SECRET": "your-super-secret-jwt-key-min-32-chars",
      "API_TIMEOUT": 5000,
      "CORS_ORIGIN": "http://localhost:3000"
    },
    {
      "NODE_ENV": "production", 
      "PORT": 8080,
      "LOG_LEVEL": "INFO",
      "DATABASE_URL": "postgresql://user:pass@db.example.com:5432/prod_db",
      "REDIS_URL": "redis://cache.example.com:6379",
      "JWT_SECRET": "production-jwt-secret-from-secrets-manager",
      "API_TIMEOUT": 3000,
      "CORS_ORIGIN": ["https://app.example.com", "https://admin.example.com"],
      "MONITORING_ENABLED": "true",
      "TRACE_SAMPLE_RATE": 0.01
    }
  ],
  "validation_notes": {
    "secrets": [
      "DATABASE_PASSWORD",
      "JWT_SECRET", 
      "ENCRYPTION_KEY",
      "SESSION_SECRET",
      "EXTERNAL_API_KEY",
      "WEBHOOK_SECRET",
      "SMTP_PASSWORD"
    ],
    "required_in_production": [
      "DATABASE_URL",
      "JWT_SECRET"
    ],
    "security_considerations": [
      "Never commit .env files with real secrets to version control",
      "Use secrets management systems in production (Vault, AWS Secrets Manager, etc.)",
      "Rotate secrets regularly",
      "Use different secrets for each environment"
    ]
  }
} 